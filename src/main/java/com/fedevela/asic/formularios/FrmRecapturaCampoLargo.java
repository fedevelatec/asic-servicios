package com.fedevela.asic.formularios;

/**
 * Created by fvelazquez on 31/03/14.
 */
import com.fedevela.asic.util.LengthLimitedDocument;
import java.awt.Color;
import java.awt.Dialog;
import java.awt.Dimension;
import java.awt.Point;
import java.awt.Toolkit;
import java.awt.event.InputEvent;
import java.awt.event.KeyEvent;
import javax.swing.KeyStroke;
import javax.swing.text.DefaultEditorKit;
import javax.swing.text.JTextComponent;
import javax.swing.text.Keymap;
import org.apache.commons.lang.StringUtils;

/**
 *
 * @author fvilla
 */
public class FrmRecapturaCampoLargo extends javax.swing.JDialog {
    private static final long serialVersionUID = -7489593841596132809L;

    private String checkValue;
    private boolean validated = false;
    private String oldValue = null;

    public boolean isValidated() {
        return validated;
    }

    public void setValidated(boolean validated) {
        this.validated = validated;
    }

    /** Creates new form RecapturaForm */
    public FrmRecapturaCampoLargo(java.awt.Frame parent, boolean modal, String nombre, String value) {
        super(parent, modal);
        oldValue=value;
        initComponents();
        init(nombre, value);
    }

    public FrmRecapturaCampoLargo(Dialog owner, boolean modal, String nombre, String value) {
        super(owner, modal);
        oldValue=value;
        initComponents();
        init(nombre, value);
    }



    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lblRecaptura = new javax.swing.JLabel();
        txtRecaptura = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        lblError = new javax.swing.JLabel();
        lblError.setVisible(false);

        setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);
        setTitle("RECAPTURA");

        lblRecaptura.setFont(new java.awt.Font("Tahoma", 1, 14));
        lblRecaptura.setText("Recaptura");

        txtRecaptura.setBackground(new java.awt.Color(255, 204, 204));
        txtRecaptura.setFont(new java.awt.Font("Tahoma", 1, 14));
        txtRecaptura.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtRecapturaKeyReleased(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 14));
        jLabel2.setForeground(new java.awt.Color(0, 51, 153));
        jLabel2.setText("Recaptura y presiona ENTER para validar o ESC para regresar");

        lblError.setFont(new java.awt.Font("Tahoma", 1, 18));
        lblError.setForeground(new java.awt.Color(255, 0, 51));
        lblError.setText("ยก CODIGO NO COINCIDE !");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
                layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(layout.createSequentialGroup()
                                                .addGap(54, 54, 54)
                                                .addComponent(lblRecaptura, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(txtRecaptura, javax.swing.GroupLayout.PREFERRED_SIZE, 672, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGroup(layout.createSequentialGroup()
                                                .addGap(292, 292, 292)
                                                .addComponent(lblError)))
                                .addContainerGap(20, Short.MAX_VALUE))
                        .addGroup(layout.createSequentialGroup()
                                .addGap(196, 196, 196)
                                .addComponent(jLabel2)
                                .addContainerGap(201, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
                layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(jLabel2)
                                .addGap(20, 20, 20)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(lblRecaptura)
                                        .addComponent(txtRecaptura, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(lblError, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addContainerGap(36, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txtRecapturaKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtRecapturaKeyReleased
        if (evt.getKeyCode() == 10) {
            if (StringUtils.equals(txtRecaptura.getText(), checkValue)) {
                this.validated = true;
                this.setVisible(false);
                lblError.setVisible(false);
                return;
            } else {
                if(txtRecaptura.getText().trim().length()>0)
                    lblError.setVisible(true);
                return;
            }
        }
        if (evt.getKeyCode() == KeyEvent.VK_ESCAPE) {
            txtRecaptura.setText((String)oldValue);
            this.validated = false;
            this.setVisible(false);
            return;
        }

        if (StringUtils.equals(txtRecaptura.getText(), checkValue)) {
            txtRecaptura.setBackground(new Color(153, 255, 153));
            lblError.setVisible(false);
        } else {
            txtRecaptura.setBackground(new Color(255, 204, 204));
        }
    }//GEN-LAST:event_txtRecapturaKeyReleased
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel lblError;
    private javax.swing.JLabel lblRecaptura;
    private javax.swing.JTextField txtRecaptura;
    // End of variables declaration//GEN-END:variables

    private void init(String nombre, String value) {

        //Deshabilitando copy y paste de la recaptura
        JTextComponent.KeyBinding[] newBindings = {
                new JTextComponent.KeyBinding(
                        KeyStroke.getKeyStroke(KeyEvent.VK_C, InputEvent.CTRL_MASK),
                        DefaultEditorKit.beepAction),
                new JTextComponent.KeyBinding(
                        KeyStroke.getKeyStroke(KeyEvent.VK_V, InputEvent.CTRL_MASK),
                        DefaultEditorKit.beepAction),
                new JTextComponent.KeyBinding(
                        KeyStroke.getKeyStroke(KeyEvent.VK_X, InputEvent.CTRL_MASK),
                        DefaultEditorKit.beepAction)
        };

        Keymap k = txtRecaptura.getKeymap();
        JTextComponent.loadKeymap(k, newBindings, txtRecaptura.getActions());

        lblRecaptura.setText(nombre);
        txtRecaptura.setDocument(new LengthLimitedDocument(StringUtils.length(value)));
        this.checkValue = value;
        Dimension dPantalla = Toolkit.getDefaultToolkit().getScreenSize();
        Dimension dFormulario = getSize();
        setLocation(new Point((dPantalla.width - dFormulario.width) / 2,
                ((dPantalla.height - dFormulario.height) / 2) - 50));
    }

}
